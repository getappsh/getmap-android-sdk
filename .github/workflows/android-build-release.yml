name: Build and Release Android App

on:
  push:
    branches:
      - build
  pull_request:
    branches:
      - build

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '17'

#      - name: Create secrets.properties file
#        run: |
#          echo "USERNAME=${{ secrets.USERNAME }}" >> ./secrets.properties
#          echo "PASSWORD=${{ secrets.PASSWORD }}" >> ./secrets.properties
#          echo "AW_USER_NAME=${{ secrets.AW_USER_NAME }}" >> ./secrets.properties
#          echo "AW_PASSWORD=${{ secrets.AW_PASSWORD }}" >> ./secrets.properties
#          echo "AW_API=${{ secrets.AW_API }}" >> ./secrets.properties
#          echo "AIRWATCH_TENANT=${{ secrets.AIRWATCH_TENANT }}" >> ./secrets.properties
#          echo "BASE_URL=${{ secrets.BASE_URL }}" >> ./secrets.properties


      - name: Create secrets.properties file
        run: |
          echo "USERNAME=test@user.com" >> ./secrets.properties
          echo "PASSWORD=test123" >> ./secrets.properties
          echo "AW_USER_NAME=1" >> ./secrets.properties
          echo "AW_PASSWORD=1" >> ./secrets.properties
          echo "AW_API=1" >> ./secrets.properties
          echo "AIRWATCH_TENANT=1" >> ./secrets.properties
          echo "BASE_URL=https://getapp.com" >> ./secrets.properties
          echo "ENCRYPTION_KEY=somekey" >> ./secrets.properties

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      - name: Build the app
        run: ./gradlew :example-app:assembleDebug

      - name: Upload APK
        uses: actions/upload-artifact@v2
        with:
          name: app-debug
          path: example-app/build/outputs/apk/debug/*.apk

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download APK
        uses: actions/download-artifact@v2
        with:
          name: app-debug
          path: app-debug

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false

      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app-debug/*.apk
          asset_name: app-debug.apk
          asset_content_type: application/vnd.android.package-archive
