name: Build and Release Android App

on:
  push:
    branches:
      - build
  pull_request:
    branches:
      - build

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

#      - name: Create secrets.properties file
#        run: |
#          echo "USERNAME=${{ secrets.USERNAME }}" >> ./secrets.properties
#          echo "PASSWORD=${{ secrets.PASSWORD }}" >> ./secrets.properties
#          echo "AW_USER_NAME=${{ secrets.AW_USER_NAME }}" >> ./secrets.properties
#          echo "AW_PASSWORD=${{ secrets.AW_PASSWORD }}" >> ./secrets.properties
#          echo "AW_API=${{ secrets.AW_API }}" >> ./secrets.properties
#          echo "AIRWATCH_TENANT=${{ secrets.AIRWATCH_TENANT }}" >> ./secrets.properties
#          echo "BASE_URL=${{ secrets.BASE_URL }}" >> ./secrets.properties


      - name: Create secrets.properties file
        run: |
          echo "USERNAME=test@user.com" >> ./secrets.properties
          echo "PASSWORD=test123" >> ./secrets.properties
          echo "AW_USER_NAME=1" >> ./secrets.properties
          echo "AW_PASSWORD=1" >> ./secrets.properties
          echo "AW_API=1" >> ./secrets.properties
          echo "AIRWATCH_TENANT=1" >> ./secrets.properties
          echo "BASE_URL=https://getapp.com" >> ./secrets.properties
          echo "ENCRYPTION_KEY=somekey" >> ./secrets.properties

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      - name: Bump version in build.gradle.kts
        id: bump_version
        run: |
          VERSION_CODE=$(grep -oP 'versionCode\s*=\s*\K\d+' example-app/build.gradle.kts)
          NEW_VERSION_CODE=$((VERSION_CODE + 1))
          sed -i "s/versionCode\s*=\s*${VERSION_CODE}/versionCode = ${NEW_VERSION_CODE}/" example-app/build.gradle.kts

          VERSION_NAME=$(grep -oP 'versionName\s*=\s*"\K[^"]+' example-app/build.gradle.kts)
          NEW_VERSION_NAME=$(echo $VERSION_NAME | awk -F. -v OFS=. '{$NF = $NF + 1; print}')
          sed -i "s/versionName\s*=\s*\"${VERSION_NAME}\"/versionName = \"${NEW_VERSION_NAME}\"/" example-app/build.gradle.kts
          
          echo $NEW_VERSION_NAME
          echo $NEW_VERSION_CODE


      - name: Build the app
        run: ./gradlew :example-app:assembleDebug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: example-app/build/outputs/apk/debug/*.apk

      - name: Upload modified build.gradle.kts
        uses: actions/upload-artifact@v4
        with:
          name: build-gradle-kts
          path: example-app/build.gradle.kts

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download APK
        uses: actions/download-artifact@v4
        with:
          name: app-debug
          path: app-debug

      - name: Download modified build.gradle.kts
        uses: actions/download-artifact@v4
        with:
          name: build-gradle-kts
          path: example-app/

      - name: Extract Version Name
        run: |
          VERSION_NAME=$(grep -oP 'versionName\s*=\s*"\K[^"]+' example-app/build.gradle.kts)
          FULL_VERSION_NAME="v${VERSION_NAME}-CM"
          echo "FULL_VERSION_NAME=${FULL_VERSION_NAME}" >> $GITHUB_ENV
          echo FULL_VERSION_NAME

      - name: Commit version bump
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add example-app/build.gradle.kts
          git commit -m "Bump version to $FULL_VERSION_NAME [skip ci]"
          git tag $FULL_VERSION_NAME
          git push origin build --tags

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: $FULL_VERSION_NAME
          release_name: Release ${FULL_VERSION_NAME}
          draft: true
          prerelease: false

      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app-debug/example-app-debug.apk
          asset_name: example-app-debug.apk
          asset_content_type: application/vnd.android.package-archive
