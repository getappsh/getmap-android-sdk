/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package GetApp.Client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param deliveryStatus 
 * @param type 
 * @param deviceId 
 * @param catalogId 
 * @param downloadStop 
 * @param downloadStart 
 * @param downloadDone 
 * @param bitNumber 
 * @param downloadSpeed 
 * @param downloadData 
 * @param downloadEstimateTime 
 * @param currentTime 
 */


data class DeliveryStatusDto (

    @Json(name = "deliveryStatus")
    val deliveryStatus: DeliveryStatusDto.DeliveryStatus,

    @Json(name = "type")
    val type: DeliveryStatusDto.Type,

    @Json(name = "deviceId")
    val deviceId: kotlin.String? = null,

    @Json(name = "catalogId")
    val catalogId: kotlin.String? = null,

    @Json(name = "downloadStop")
    val downloadStop: java.time.OffsetDateTime? = null,

    @Json(name = "downloadStart")
    val downloadStart: java.time.OffsetDateTime? = null,

    @Json(name = "downloadDone")
    val downloadDone: java.time.OffsetDateTime? = null,

    @Json(name = "bitNumber")
    val bitNumber: java.math.BigDecimal? = null,

    @Json(name = "downloadSpeed")
    val downloadSpeed: java.math.BigDecimal? = null,

    @Json(name = "downloadData")
    val downloadData: java.math.BigDecimal? = null,

    @Json(name = "downloadEstimateTime")
    val downloadEstimateTime: java.math.BigDecimal? = null,

    @Json(name = "currentTime")
    val currentTime: java.time.OffsetDateTime? = null

) {

    /**
     * 
     *
     * Values: start,done,error,cancelled,pause,`continue`,download,deleted
     */
    @JsonClass(generateAdapter = false)
    enum class DeliveryStatus(val value: kotlin.String) {
        @Json(name = "Start") start("Start"),
        @Json(name = "Done") done("Done"),
        @Json(name = "Error") error("Error"),
        @Json(name = "Cancelled") cancelled("Cancelled"),
        @Json(name = "Pause") pause("Pause"),
        @Json(name = "Continue") `continue`("Continue"),
        @Json(name = "Download") download("Download"),
        @Json(name = "Deleted") deleted("Deleted");
    }
    /**
     * 
     *
     * Values: software,map,cache
     */
    @JsonClass(generateAdapter = false)
    enum class Type(val value: kotlin.String) {
        @Json(name = "software") software("software"),
        @Json(name = "map") map("map"),
        @Json(name = "cache") cache("cache");
    }
}

